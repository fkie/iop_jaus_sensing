<launch>
  <arg name="ns" default="myrobot"/>
  <arg name="id_subsystem" default="133"/>
  <arg name="id_node" default="64"/>
  <group ns="$(arg ns)">
      <node name="iop_digital_video" pkg="fkie_iop_component" type="iop_component">
        <param name="capability_group" value="iop_bridge"/>
        <rosparam param="services">
          [
            fkie_iop_digital_resource_discovery : "urn:jaus:jss:iop:DigitalResourceDiscoveryClient_1_0",
            fkie_iop_digital_video: "urn:jaus:jss:environmentSensing:DigitalVideo_1_0",
            fkie_iop_digital_video: "urn:jaus:jss:environmentSensing:VisualSensor_1_0",
            iop_discovery_1_0_fkie: "urn:jaus:jss:core:DiscoveryClient_1_0",
            iop_accesscontrol_1_0_fkie: "urn:jaus:jss:core:AccessControl_1_0",
            iop_events_1_0_fkie: "urn:jaus:jss:core:Events_1_0",
            iop_events_1_0_fkie: "urn:jaus:jss:core:EventsClient_1_0",
            iop_transport_1_0_fkie: "urn:jaus:jss:core:Transport_1_0",
          ]
        </rosparam>
        <param name="iop_address" value="$(arg id_subsystem).$(arg id_node).50"/>
        <param name="enable_ros_interface" value="false"/>
        <!-- list with video streams. Format: "ID/Type of source": "URL".
          Example for RTSP stream: "0/rtsp" : "rtsp://URL" -->
        <rosparam param="video_endpoints">
          "0/rtsp_topic" : "/mapbox/map_image/rtsp"
        </rosparam>
    </node>
  </group>
</launch>
